ques no 1:- Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.

/*Query 1/*
SELECT   f.title,
	 c.name, 
	 COUNT(r.rental_id)
FROM film_category fc
JOIN category c
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
JOIN inventory i
ON i.film_id = f.film_id
JOIN rental r 
ON r.inventory_id = i.inventory_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
GROUP BY 1,
	 2
ORDER BY 2,
	 1







ques no 2:- Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter)
 based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories?

*Query 2/*
SELECT  f.title, 
	c.name, 
	f.rental_duration, 
	NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
FROM film_category fc
JOIN category c
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
ORDER BY 3










ques no 3:- provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of
 film category for each corresponding rental duration category. The resulting table should have three columns:
Category
Rental length category
count

/*Query 3/*
SELECT   t1.name,
	 t1.standard_quartile, 
	 COUNT(t1.standard_quartile)
FROM
(SELECT f.title, 
	c.name , 
	f.rental_duration, 
	NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
FROM film_category fc
JOIN category c
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')) t1 
GROUP BY 1, 
	 2
ORDER BY 1,
	 2






ques no 4:- Write a query that returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month.
 Your table should include a column for each of the following: year, month, store ID and count of rental orders fulfilled during that month.
/*QUERY 4/*
SELECT
  DATE_PART('YEAR', rental_date) YEARs,
  DATE_PART('MONTH', rental_date) MONTHs,
  store.store_id,
  COUNT(*)
FROM rental
JOIN payment
  ON payment.rental_id = rental.rental_id
JOIN staff
  ON staff.staff_id = payment.staff_id
JOIN store
  ON store.store_id = staff.store_id
GROUP BY 1,
         2,
         3
order by 4 desc